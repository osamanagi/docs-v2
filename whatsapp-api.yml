openapi: 3.0.0

x-stoplight:
  id: jtah7ewhmvdmk

info:
  version: v1.0
  title: Hypersender WhatsApp API Docs
  description: |

    The Hypersender WhatsApp API is a powerful api to send and recieve messages using your own whatsapp number.
    Without the high costs of Meta's Whatsapp business API.

    In this Docs you'll learn how to use and integrate Hypersnder Whatsapp API into your existing system/service or application using simple API endpoints.

    **What you can Do?**

    - Send Text and basic Url messages.
    - Send Media through Link or uploaded file.
    - Send Audio through Link or uploaded file.
    - Send Contact Card
    - Send Location
    - Send Poll votes

    **You can also**

    - React to a message
    - Forward messages to other chats
    - Acknowledge messages (mark as read)
    - Star and unstar messages

    <hr />

      ## Quick Demo

      :::info
        **Learn how to use Hypersender whatsapp API to send a message using Postman:**
        [Demo Link](how-to-send-whatsapp-message-in-postman)
      :::

    <hr />
    ## postman collection

    You can download our Postman Collection to easily interact with our API.

    # START_RAW
    import Button from "@site/src/components/Button";

    <Button label="Download Collection" link="/whatsapp-postman-collection.json" size="lg" />
    # END_RAW

    <hr />

    ## Servers (Endpoints)

    - Production (activated): [https://app.hypersender.com/api/whatsapp/v1](https://app.hypersender.com/api/whatsapp/v1)

servers:
  - url: 'https://app.hypersender.com/api/whatsapp/v1'
    variables:
      baseUrl:
        default: 'https://app.hypersender.com/api/whatsapp/v1'
        description: The base URL for the API
      bearerToken:
        default: 'Api key from the Hypersender dashboard'
        description: The API token from the Hypersender dashboard
      instance_id:
        default: 'your_instance_id'
        description: The instance ID from the Hypersender dashboard

paths:
  '/{instance}/send-text-safe':
    post:
      tags:
        - Send Messages
      summary: Send Text Safe
      description: |-
        ## Send Text Message Safe

        The Send Text Safe endpoint functions similarly to the standard send-text endpoint but with enhanced safety features designed specifically to protect your WhatsApp number from being blocked or flagged for suspicious activity.

        :::info
          - WhatsApp has strict policies against automated messaging, and using the standard send-text endpoint too frequently can lead to your number being flagged or blocked.
          - This endpoint is designed to mimic human behavior more closely, making it less likely for WhatsApp to detect automated activity.
        :::

        ### **It:**
          - Automatically calculates the appropriate delay between messages based on text length, by adding a few seconds for thinking/reviewing before sending
          - Simulates typing behavior in WhatsApp before sending the message
          - Significantly reduces the risk of your WhatsApp number being blocked due to automated messaging patterns
          - Reduces the risk of being flagged for automated behavior

        <hr />

        ## Sending link preview

        If the text has a link - it generates a preview for that link. You can adjust the behaviour by setting

        - `link_preview: true` - to enable link preview
        - `link_preview_high_quality: true` - to enable high-quality link preview

        # START_RAW
        <img src="/img/send-text-send-link-preview.png" alt="send-text send link preview" />
        # END_RAW

        :::info
            You can still send messages directly with `send-text` endpoint, but we highly recommend using this endpoint for regular messaging operations to maintain a more natural communication pattern, and keep your whatsapp number safe from being blocked.
        :::
      operationId: wa-send-text-safe-message
      parameters:
        - name: Accept
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          description: Instance UUID copied from hypersender dashboard
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    text:
                      type: string
                      description: "Text Message\r\n"
                    reply_to:
                      type: string
                      description: "Reply to message id\r\n"
                    link_preview:
                      type: boolean
                      description: "Link Preview\r\n"
                    link_preview_high_quality:
                      type: boolean
                      description: "Link Preview High Quality\r\n"
                  required:
                    - text
              x-examples:
                Example 1:
                  linkPreview:
                    link: 'https://hypersender.com'
                    title: Hypersender
                    description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                    text: Hypersender is Amazing!
            examples:
              Example 1:
                value:
                  chatId: 111111111111@c.us
                  text: 'Hi there!'
                  reply_to: string
                  link_preview: false
                  link_preview_high_quality: false
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          extendedTextMessage:
                            type: object
                            properties:
                              text:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      text: Hi
                      contextInfo: []
              examples:
                Example 1:
                  value:
                    key: {
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    }
                    message: {
                        extendedTextMessage: {
                            text: Hi there!
                        }
                    }
                    messageTimestamp: 1741359489
                    status: PENDING
                Example 2:
                  value:
                    key: {
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    }
                    message: {
                        extendedTextMessage: {
                            text: "https://hypersender.com/",
                            matchedText: "https://hypersender.com/",
                            description: "Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.",
                            title: "Hypersender: Whatsapp and SMS APIs",
                            previewType: "NONE",
                            thumbnailDirectPath: "/o1/v/t24/f2/m234/AQMWy7W9aoxZqxxRETDx1dXJz6jhTwuZvTV2e1Ep-lbVfAn2vblroFuisfPajGw-hsD2vrHbe4Tn2DuHrqdaytfg8QChweXGPnVMrtrbMg?ccb=9-4&oh=01_Q5Aa2gH8kJkHg-6ZdB18wKj5CqnLiEJ5qlItVfaPNNPIosO6fA&oe=68F1F7ED&_nc_sid=e6ed6c",
                            thumbnailSha256: "J22VHFlcIdrEtvvznaB6KFCsUenk1Zb+P6yQvdpKW0I=",
                            thumbnailEncSha256: "1zjk1SGXR7Afyn2WgnKa88EmxmSIbGK68hiACkQ4xL4=",
                            mediaKey: "Vt7QDa+t+Wt2fZUbqqUJ4IX9238kgkm1W+N6VVvlzMg=",
                            mediaKeyTimestamp: 1758103675
                        }
                    }
                    messageTimestamp: 1758103675
                    status: PENDING
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Multiple fields Error:
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - The number you want to send the message to is not on whatsapp.
                      jid: 20121323124131@s.whatsapp.net
                      exists: false
                    statusCode: 422
                'Single Field error ':
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - textMessage.text should not be empty
                    statusCode: 422
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              examples:
                default:
                  value:
                    message: Server Error
                Example 1:
                  value:
                    message: Server Error
      security:
        - Authorization: []

  '/{instance}/send-text':
    post:
      tags:
        - Send Messages
      summary: Send Text
      description: |-
        ## Send Text Message

        Send links and simple texts to a WhatsApp

        - Chat

        - Group

        - Recipient

        :::warning
          We highly recommend using the [`send-text-safe`](/docs/whatsapp/wa-send-text-safe-message) endpoint for regular messaging operations to maintain a more natural communication pattern, and keep your whatsapp number safe from being blocked.
        :::


        ## Sending link preview

        If the text has a link - it generates a preview for that link. You can adjust the behaviour by setting

        - `link_preview: true` - to enable link preview
        - `link_preview_high_quality: true` - to enable high-quality link preview

        # START_RAW
        <img src="/img/send-text-send-link-preview.png" alt="send-text send link preview" />
        # END_RAW


        <hr />

        ## Quick Demo

        :::info
          **Learn how to use Hypersender whatsapp API to send a message using Postman:**
          [Demo Link](how-to-send-whatsapp-message-in-postman)
        :::
      operationId: wa-send-text-message
      parameters:
        - name: Accept
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          description: Instance UUID copied from hypersender dashboard
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    text:
                      type: string
                      description: "Text Message\r\n"
                    reply_to:
                      type: string
                      description: "Reply to message id\r\n"
                    link_preview:
                      type: boolean
                      description: "Link Preview\r\n"
                    link_preview_high_quality:
                      type: boolean
                      description: "Link Preview High Quality\r\n"
                  required:
                    - text
              x-examples:
                Example 1:
                  linkPreview:
                    link: 'https://hypersender.com'
                    title: Hypersender
                    description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                    text: Hypersender is Amazing!
            examples:
              Example 1:
                value:
                  chatId: 111111111111@c.us
                  text: 'Hi there!'
                  reply_to: string
                  link_preview: false
                  link_preview_high_quality: false
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          extendedTextMessage:
                            type: object
                            properties:
                              text:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      text: Hi
                      contextInfo: []
              examples:
                Example 1:
                  value:
                    key: {
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    }
                    message: {
                        extendedTextMessage: {
                            text: Hi there!
                        }
                    }
                    messageTimestamp: 1741359489
                    status: PENDING

                Example 2:
                  value:
                    key: {
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    }
                    message: {
                        extendedTextMessage: {
                            text: "https://hypersender.com/",
                            matchedText: "https://hypersender.com/",
                            description: "Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.",
                            title: "Hypersender: Whatsapp and SMS APIs",
                            previewType: "NONE",
                            thumbnailDirectPath: "/o1/v/t24/f2/m234/AQMWy7W9aoxZqxxRETDx1dXJz6jhTwuZvTV2e1Ep-lbVfAn2vblroFuisfPajGw-hsD2vrHbe4Tn2DuHrqdaytfg8QChweXGPnVMrtrbMg?ccb=9-4&oh=01_Q5Aa2gH8kJkHg-6ZdB18wKj5CqnLiEJ5qlItVfaPNNPIosO6fA&oe=68F1F7ED&_nc_sid=e6ed6c",
                            thumbnailSha256: "J22VHFlcIdrEtvvznaB6KFCsUenk1Zb+P6yQvdpKW0I=",
                            thumbnailEncSha256: "1zjk1SGXR7Afyn2WgnKa88EmxmSIbGK68hiACkQ4xL4=",
                            mediaKey: "Vt7QDa+t+Wt2fZUbqqUJ4IX9238kgkm1W+N6VVvlzMg=",
                            mediaKeyTimestamp: 1758103675
                        }
                    }
                    messageTimestamp: 1758103675
                    status: PENDING
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Multiple fields Error:
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - The number you want to send the message to is not on whatsapp.
                      jid: 20121323124131@s.whatsapp.net
                      exists: false
                    statusCode: 422
                'Single Field error ':
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - textMessage.text should not be empty
                    statusCode: 422
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              examples:
                default:
                  value:
                    message: Server Error
                Example 1:
                  value:
                    message: Server Error
      security:
        - Authorization: []

  '/{instance}/send-link-preview':
    post:
      tags:
        - Deprecated
      summary: send-link-preview
      description: |-
        ## Send Link Preview

        :::danger
          This endpoint is deprecated. Please use the [`send-link-custom-preview`](/docs/whatsapp/wa-send-text-safe-message) endpoint instead.
          This endpoint will be removed in **`17-11-2025`**.
        :::

        This endpoint allows sending link previews within a specific instance

        # START_RAW
        <img src="/img/link-preview.png" alt="Hypersender Logo" />
        # END_RAW


      operationId: wa-send-link-preview
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          description: Instance UUID copied from hypersender dashboard
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    url:
                      type: string
                      description: "url to send\r\n"
                  required:
                    - url
                - type: string
                  properties:
                    title:
                      type: string
                      description: "title for the message (Optional)\r\n"
              x-examples:
                Example 1:
                  content:
                    text: |-
                      https://hypersender.com

                            Hypersender is Amazing!
                    matchedText: 'https://hypersender.com'
                    canonicalUrl: 'https://hypersender.com'
                    description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                    title: Hypersender
                    previewType: NONE
            examples:
              Example 1:
                value:
                  chatId: 11111111111@c.us
                  url: https://www.youtube.com/watch?v=DMM0sZAMrXo
                  title: Hypersender is awesome
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          extendedTextMessage:
                            type: object
                            properties:
                              text:
                                type: string
                              matchedText:
                                type: string
                              canonicalUrl:
                                type: string
                              description:
                                type: string
                              title:
                                type: string
                              previewType:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      text: |-
                        https://hypersender.com

                              Hypersender is Amazing!
                      matchedText: 'https://hypersender.com'
                      canonicalUrl: 'https://hypersender.com'
                      description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                      title: Hypersender
                      previewType: NONE
              examples:
                Example 1:
                  value:
                    key:
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    message:
                        extendedTextMessage:
                          text: hypersender is awesome    https://hypersender.com,
                          matchedText: https://hypersender.com,
                          canonicalUrl: https://hypersender.com,
                          description: Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.,
                          title:  Hypersender,
                          previewType: NONE
                    messageTimestamp: 1741359489
                    status: PENDING
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

  '/{instance}/send-link-custom-preview':
    post:
      tags:
        - Send Messages
      summary: send-link-custom-preview
      description: |-
        ## Send Link Custom Preview

        :::info
          This feature is only available for subscribed accounts.
        :::

        Using **`send-text`** or **`send-text-safe`** you can send auto-generated link previews.


        ## You can send custom link preview in two ways:

        ## Provide a URL for the image.

        # START_RAW
        <img src="/img/send-link-custom-preview-url.png" alt="Hypersender Send Link Custom Preview URL" />
        # END_RAW

        :::info
          WhatsApp requires the text to contain the preview URL anywhere in the text.
          text - must contain preview.url somewhere in the text
          <hr/>
          Example: `"text": "Check this out! https://hypersender.com/"`
        :::

        :::warning
          Please note that the URL must be publicly accessible and not require any authentication or special headers to access the file.
        :::


        ---

        ## Send the image it self as a file upload.

        # START_RAW
        <img src="/img/send-link-custom-preview-file.png" alt="Hypersender Send Link Custom Preview File" />
        # END_RAW

        :::info
          By specifying the `high_quality` parameter as `true`, you can get a higher quality image.
        :::

        # START_RAW
        <img src="/img/send-link-custom-preview-preview.png" alt="Hypersender Send Link Custom Preview Preview" />
        # END_RAW

      operationId: wa-send-link-custom-preview
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          description: Instance UUID copied from hypersender dashboard
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    text:
                      type: string
                      description: "text should contain the url to send\r\n"
                  required:
                    - text

                - type: string
                  properties:
                    reply_to:
                      type: string
                      description: "reply to message id\r\n"

                - type: string
                  properties:
                    high_quality:
                      type: boolean
                      description: "high quality for the image\r\n"

                - type: string
                  properties:
                    preview_title:
                      type: string
                      description: "title of the link preview\r\n"
                  required:
                    - preview_title

                - type: string
                  properties:
                    preview_description:
                      type: string
                      description: "description of the link preview\r\n"
                  required:
                    - preview_description

                - type: string
                  properties:
                    preview_url:
                      type: string
                      description: "must be a valid URL\r\n"
                  required:
                    - preview_url

                - type: string
                  properties:
                    preview_image_url:
                      type: string
                      description: "URL of the image to be used in the link preview - (only if preview_image_file is not provided)\r\n"
                  required:
                    - preview_image_url

                - type: string
                  properties:
                    preview_image_file:
                      type: string
                      description: "file of the image to be used in the link preview - (only if preview_image_url is not provided)\r\n"

                  required:
                    - preview_image_file

              x-examples:
                Example 1:
                  content:
                    text: |-
                      https://hypersender.com

                            Hypersender is Amazing!
                    matchedText: 'https://hypersender.com'
                    canonicalUrl: 'https://hypersender.com'
                    description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                    title: Hypersender
                    previewType: NONE
            examples:
              Example 1:
                value:
                  chatId: "1111111111@c.us"
                  text: "Check this out! https://hypersender.com/"
                  reply_to: "string"
                  high_quality: true
                  preview_title: "Hypersender is awesome"
                  preview_description: "Check this out, this is a custom link preview!"
                  preview_url: "https://hypersender.com/"
                  preview_image_url: "https://m.media-amazon.com/images/M/MV5BMjRhYjdkOGMtZDY5Zi00OWEwLTlkOWEtYz.jpg"
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          extendedTextMessage:
                            type: object
                            properties:
                              text:
                                type: string
                              matchedText:
                                type: string
                              description:
                                type: string
                              title:
                                type: string
                              previewType:
                                type: string
                              jpegThumbnail:
                                type: string
                              thumbnailDirectPath:
                                type: string
                              thumbnailSha256:
                                type: string
                              thumbnailEncSha256:
                                type: string
                              mediaKey:
                                type: string
                              mediaKeyTimestamp:
                                type: string
                              thumbnailHeight:
                                type: number
                              thumbnailWidth:
                                type: number
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      text: |-
                        https://hypersender.com

                              Hypersender is Amazing!
                      matchedText: 'https://hypersender.com'
                      canonicalUrl: 'https://hypersender.com'
                      description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
                      title: Hypersender
                      previewType: NONE
              examples:
                Example 1:
                  value:
                    key: {
                        remoteJid: "1111111111@s.whatsapp.net",
                        fromMe: true,
                        id: "3EB091A456D98511123FEA"
                    }
                    message: {
                        extendedTextMessage: {
                            text: "Check this out! https://hypersender.com/",
                            matchedText: "https://hypersender.com/",
                            description: "Check this out, this is a custom link preview!",
                            title: "Hypersender is awesome",
                            previewType: "NONE",
                            jpegThumbnail: "/9j/2wBDABALDA4MChAODQ4SERATGCgaGBYWGDEjJR0oOjM9PDkzODdASFxOQERXRTc4UG1RV19iZ2hnPk1xeXBkeFxlZ2P/2wBDARESEhgVGC8aGi9jQjhCY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2P/wAARCAARACADASIAAhEBAxEB/8QAGgAAAgIDAAAAAAAAAAAAAAAAAAUDBAECBv/EACwQAAECBQIEBAcAAAAAAAAAAAECAwAEBREhBjESEzVBYYGDsTI0UXJ0srP/xAAWAQEBAQAAAAAAAAAAAAAAAAABAAL/xAAXEQEBAQEAAAAAAAAAAAAAAAAAARIC/9oADAMBAAIRAxEAPwBi2HEqaUEXTY54hEEjVF1MOrTLqa5V0pJVnfe0Y1CX6fLS77E206gLIIbTw2NsE2ORviI9OzQmWVNKfQ282LhAbCisdzDehI3VU3kVBEutlTbjgt8YORkeREQ1GvKp86gusp5YBTw8YVfxt4WitW5GWS4h+cfcUt10qBKSjt9ADsIpT7NOm5d0tVdgu9kKSc22AO/naDRzDjUHRXPuT7wr0v8ANzH459xBBGSdDqFK9b+cclpjrvpPfoYIIoa//9k=",
                            thumbnailDirectPath: "/o1/v/t24/f2/m232/AQMNFP0XcTmGZckNL1WI6_-o4AAzaPTlTtqRat-YC7SlRrlpV8e_0fmUj7xBK5kS_9m4B-3wgG8wJ-aitI6TQqAXSTHEUhH5u4m1QCxRmw?ccb=9-4&oh=01_Q5Aa2gFW4du4I6OfD9Y_djyP1KIukQnFQRfu8YEfQJ6ydbY8JQ&oe=68F20A99&_nc_sid=e6ed6c",
                            thumbnailSha256: "KccP5I7AxrmcoUeD868qd0ISDFf6TYUTtw6dJS/Sdjk=",
                            thumbnailEncSha256: "Vveij+Avc8amAa2u6AtPSZG/07FzjJfDtMJqmYt/g4A=",
                            mediaKey: "Tp1eSebY/WJr+mZmzWmbRAj4WXyEmGsvSKZySAw9Kj8=",
                            mediaKeyTimestamp: 1758105918,
                            thumbnailHeight: 649,
                            thumbnailWidth: 1200
                        }
                    }
                    messageTimestamp: 1758105918,
                    status: "PENDING"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []


  '/{instance}/send-file':
    post:
      tags:
        - Send Messages
      summary: send-file
      description: |-
        ## Send file Message

        Send a file (as a document/attachment) to a chat.

        You can send files in two ways:

        ## Provide a URL for the file.

        # START_RAW
        <img src="/img/send-file-url.png" alt="Hypersender Logo" />
        # END_RAW

        :::warning
          Please note that the URL must be publicly accessible and not require any authentication or special headers to access the file.
        :::

        ---

        ## Send the file it self as a file upload.

        # START_RAW
        <img src="/img/send-file-file.jpeg" alt="Hypersender Logo" />
        # END_RAW

        Possible file types are: `[png, jpg, jpeg, gif, mp3, mp4, avi, mkv, mov, flv, wav, ogg, webm, 3gp, flac, aac, wma, m4a, opus, pdf, doc, docx, xls, xlsx, ppt, pptx, txt, zip]`

        # START_RAW
        <img src="/img/send-file-preview.jpeg" alt="Hypersender Logo" />
        # END_RAW

      operationId: wa-send-file
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          deprecated: false
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: "**Require to use `multipart/form-data`**"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    url:
                      type: string
                      description: "url to send\r\n (required without file)"
                    file:
                      type: string
                      description: "file to send\r\n (required without url)"
                    filename:
                      type: string
                      description: "filename for the file\r\n"
                    mimetype:
                      type: string
                      description: "mimetype for the file\r\n"
                    caption:
                      type: string
                      description: "caption for the file\r\n"
                    reply_to:
                      type: string
                      description: "reply to message id\r\n"
                  required:
                    - url
                    - file
            examples:
              Example 1:
                value:
                  chatId: '11111111111@c.us'
                  url: 'https://hypersender.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.52c242e8.png&w=640&q=75'
                  fileName: hypersender_logo
                  mimetype: image
                  caption: string
                  reply_to: string
              Example 2:
                value:
                  chatId: '11111111111@c.us'
                  file: 'hypersender.jpeg'
                  fileName: hypersender_logo
                  mimetype: image
                  caption: string
                  reply_to: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          documentMessage:
                            type: object
                            properties:
                              url:
                                type: string
                              mimetype:
                                type: string
                              fileSha256:
                                type: string
                              fileLength:
                                type: string
                              mediaKey:
                                type: string
                              fileName:
                                type: string
                              fileEncSha256:
                                type: string
                              directPath:
                                type: string
                              mediaKeyTimestamp:
                                type: string
                              caption:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      url: 'https://mmg.whatsapp.net/o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000&mms3=true'
                      mimetype: image/png
                      caption: string
                      fileSha256: j/kM8e8A7qm5wi14X7dU5h0VUpbgAdxuAkuAZXqbv3Q=
                      fileLength: '188795'
                      mediaKey: r+N7EFTOq0IJGdGwKCZRS4/FMZYa4f0rLf3ASREmKSE=
                      fileEncSha256: 475YUJVkMeFChIuWFaWlLbfKHo3OK8+HGgndhNFZHiQ=
                      directPath: /o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000
                      mediaKeyTimestamp: '1720448410'
              examples:
                Example 1:
                  value:
                    key:
                        remoteJid: 1111111111@s.whatsapp.net
                        fromMe: true
                        id: 3EB089F063C03E43EECE9D
                    message:
                        documentMessage:
                            url: https://mmg.whatsapp.net/v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0&mms3=true
                            mimetype: image/jpeg
                            fileSha256: ubfaNZ4rY7T7/ghhWnBh1cVf1d00JSHENKunZuHs+yc=
                            fileLength: 7200
                            mediaKey: ARUCxn91XDCjmCvFecREY4Fpg9RSOYa8O5D7TxGWGkE=
                            fileName: hypersender.jpeg
                            fileEncSha256: ER9FB+GEzrKmooWDbNpqenokG1mAtvbIU+Ceo7JeNwQ=
                            directPath: /v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0
                            mediaKeyTimestamp: 1741390160
                            caption: dolore nulla nisi Duis
                    messageTimestamp: 1741390160
                    status: PENDING
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

  '/{instance}/send-image':
      post:
        tags:
          - Send Messages
        summary: send-image
        description: |-
          ## Send image Message

          Send images to the chat.

          You can send files in two ways:

          ## Provide a URL for the image.

          # START_RAW
          <img src="/img/send-image-url.png" alt="Hypersender Send Image URL" />
          # END_RAW

          :::warning
            Please note that the URL must be publicly accessible and not require any authentication or special headers to access the file.

            Specify the `mimetype` of the image in the URL. Example: `image/png`
          :::

          ---

          ## Send the image it self as a file upload.

          # START_RAW
          <img src="/img/send-image-file.jpeg" alt="Hypersender Logo" />
          # END_RAW


          # START_RAW
          <img src="/img/send-image.png" alt="Hypersender Logo" />
          # END_RAW


        operationId: wa-send-image
        parameters:
          - name: Accept
            in: header
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            deprecated: false
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
        requestBody:
          description: "**Require to use `multipart/form-data`**"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                  - type: string
                    properties:
                      url:
                        type: string
                        description: "url to send\r\n (required without file)"
                      file:
                        type: string
                        description: "file to send\r\n (required without url)"
                      filename:
                        type: string
                        description: "filename for the file\r\n"
                      mimetype:
                        type: string
                        description: "mimetype for the file - specify the `mimetype` of the image in the URL.\r\n"
                        example: image/png
                      caption:
                        type: string
                        description: "caption for the file\r\n"
                      reply_to:
                        type: string
                        description: "reply to message id\r\n"
                    required:
                      - url
                      - file
              examples:
                Example 1:
                  value:
                    chatId: '11111111111@c.us'
                    url: 'https://hypersender.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.52c242e8.png&w=640&q=75'
                    fileName: hypersender_logo
                    mimetype: image
                    caption: string
                    reply_to: string
                Example 2:
                  value:
                    chatId: '11111111111@c.us'
                    file: 'hypersender.jpeg'
                    fileName: hypersender_logo
                    mimetype: image
                    caption: string
                    reply_to: string
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  allOf:
                    - type: object
                      properties:
                        key:
                          type: object
                          properties:
                            remoteJid:
                              type: string
                            fromMe:
                              type: boolean
                            id:
                              type: string
                        message:
                          type: object
                          properties:
                            imageMessage:
                              type: object
                              properties:
                                url:
                                  type: string
                                mimetype:
                                  type: string
                                fileSha256:
                                  type: string
                                fileLength:
                                  type: string
                                height:
                                  type: number
                                width:
                                  type: number
                                mediaKey:
                                  type: string
                                fileName:
                                  type: string
                                fileEncSha256:
                                  type: string
                                directPath:
                                  type: string
                                mediaKeyTimestamp:
                                  type: string
                                caption:
                                  type: string
                                jpegThumbnail:
                                  type: string
                        messageTimestamp:
                          type: string
                        status:
                          type: string
                  x-examples:
                    Example 1:
                      content:
                        url: 'https://mmg.whatsapp.net/o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000&mms3=true'
                        mimetype: image/png
                        caption: string
                        fileSha256: j/kM8e8A7qm5wi14X7dU5h0VUpbgAdxuAkuAZXqbv3Q=
                        fileLength: '188795'
                        mediaKey: r+N7EFTOq0IJGdGwKCZRS4/FMZYa4f0rLf3ASREmKSE=
                        fileEncSha256: 475YUJVkMeFChIuWFaWlLbfKHo3OK8+HGgndhNFZHiQ=
                        directPath: /o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000
                        mediaKeyTimestamp: '1720448410'
                examples:
                  Example 1:
                    value:
                      key:
                          remoteJid: 1111111111@s.whatsapp.net
                          fromMe: true
                          id: 3EB089F063C03E43EECE9D
                      message:
                          imageMessage:
                              url: https://mmg.whatsapp.net/v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0&mms3=true
                              mimetype: image/jpeg
                              fileSha256: ubfaNZ4rY7T7/ghhWnBh1cVf1d00JSHENKunZuHs+yc=
                              fileLength: 7200
                              height: 200
                              width: 200
                              mediaKey: ARUCxn91XDCjmCvFecREY4Fpg9RSOYa8O5D7TxGWGkE=
                              fileName: hypersender.jpeg
                              fileEncSha256: ER9FB+GEzrKmooWDbNpqenokG1mAtvbIU+Ceo7JeNwQ=
                              directPath: /v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0
                              mediaKeyTimestamp: 1741390160
                              caption: dolore nulla nisi Duis
                              jpegThumbnail: /9j/2wBDABALDA4MChAODQ4SERATGCgaGBYWGDEjJR0oOjM9PDkzODdASFxOQERXRTc4UG1RV19iZ2hnPk1xeXBkeFxlZ2P/2wBDARESEhgVGC8aGi9jQjhCY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2P/wAARCAAgACADASIAAhEBAxEB/8QAGAABAQADAAAAAAAAAAAAAAAABQIDBAb/xAAqEAACAQQBAgUDBQAAAAAAAAABAgMABAURIRMxEiJRYXEUkbEVMkGhwf/EABcBAQEBAQAAAAAAAAAAAAAAAAACAQT/xAAdEQACAQUBAQAAAAAAAAAAAAAAAQIREiEiMwNB/9oADAMBAAIRAxEAPwDrctlBZDpRaaYjfPZRRSWGSyA6srEKeR1G19hVY2MZDMSTS+ZVJfR+dCmbm++nvoIG8AjkBLMx1rVDi67TePgHJZZHGjqox8I7mNtgfIpbE5QXo6UoCzKN8dmHrWW2vfqb6eBfA0caghlO97oS9T9NzAaLhQQ4Hse4/NDOVJQeDZw0b2+YuISvAUgn23xSF7Ym6yFvI6K8KKwcN/VXfWsrhpbNxFORonX7h6e1DrkslY+S4jLa/mRf9FCnb5KySwK2dibXIXEiIqQuoCBT96Gv3GRzKpF5l2EBHoO5/NVJf5HIjpRRkK3BEYPPyaUxOLFkOrKQ0zDXHZR6UJ60hBan/9k=
                      messageTimestamp: 1741390160
                      status: PENDING
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
        security:
          - Authorization: []

  '/{instance}/send-video':
      post:
        tags:
          - Send Messages
        summary: send-video
        description: |-
          ## Send video Message

          Send videos to the chat.

          :::info
            This feature is only available for subscribed accounts.
          :::

          You can send videos in two ways:

          ## Provide a URL for the video.

          # START_RAW
          <img src="/img/send-video-url.png" alt="Hypersender Send Video URL" />
          # END_RAW

          :::warning
            Please note that the URL must be publicly accessible and not require any authentication or special headers to access the file.

            You can send videos only in `mp4` formats - so make sure the url contains the correct extension - what WhatsApp accepts.

            **Max allowed file size is `20MB`.**
          :::

          ---

          ## Send the video it self as a file upload.

          # START_RAW
          <img src="/img/send-video-file.png" alt="Hypersender Video File" />
          # END_RAW

          ---

          # START_RAW
          <img src="/img/send-video.png" alt="Hypersender Video" />
          # END_RAW

          ---

          :::info
            By specifying the `asNote` property to `true`, the video will be sent as a whatsapp note video.
          :::

          # START_RAW
          <img src="/img/send-note-video.png" alt="Hypersender Note Video" />
          # END_RAW


        operationId: wa-send-video
        parameters:
          - name: Accept
            in: header
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            deprecated: false
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
        requestBody:
          description: "**Require to use `multipart/form-data`**"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                  - type: string
                    properties:
                      url:
                        type: string
                        description: "url to send\r\n (required without file) - for url the file extension must be `mp4` - max file size is `20MB`"
                      file:
                        type: string
                        description: "file to send\r\n (required without url) - for file the file extension must be `mp4` - max file size is `20MB`"
                      asNote:
                        type: boolean
                        description: "Set to `true` to send the video as a whatsapp note video\r\n"
                      caption:
                        type: string
                        description: "caption for the file\r\n"
                      reply_to:
                        type: string
                        description: "reply to message id\r\n"
                    required:
                      - url
                      - file
              examples:
                Example 1:
                  value:
                    chatId: '11111111111@c.us'
                    url: 'https://hypersender.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.52c242e8.png&w=640&q=75'
                    asNote: false
                    caption: string
                    reply_to: string
                Example 2:
                  value:
                    chatId: '11111111111@c.us'
                    file: 'hypersender.jpeg'
                    asNote: false
                    caption: string
                    reply_to: string
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  allOf:
                    - type: object
                      properties:
                        key:
                          type: object
                          properties:
                            remoteJid:
                              type: string
                            fromMe:
                              type: boolean
                            id:
                              type: string
                        message:
                          type: object
                          properties:
                            imageMessage:
                              type: object
                              properties:
                                url:
                                  type: string
                                mimetype:
                                  type: string
                                fileSha256:
                                  type: string
                                fileLength:
                                  type: string
                                height:
                                  type: number
                                width:
                                  type: number
                                mediaKey:
                                  type: string
                                fileName:
                                  type: string
                                fileEncSha256:
                                  type: string
                                directPath:
                                  type: string
                                mediaKeyTimestamp:
                                  type: string
                                caption:
                                  type: string
                                jpegThumbnail:
                                  type: string
                        messageTimestamp:
                          type: string
                        status:
                          type: string
                  x-examples:
                    Example 1:
                      content:
                        url: 'https://mmg.whatsapp.net/o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000&mms3=true'
                        mimetype: image/png
                        caption: string
                        fileSha256: j/kM8e8A7qm5wi14X7dU5h0VUpbgAdxuAkuAZXqbv3Q=
                        fileLength: '188795'
                        mediaKey: r+N7EFTOq0IJGdGwKCZRS4/FMZYa4f0rLf3ASREmKSE=
                        fileEncSha256: 475YUJVkMeFChIuWFaWlLbfKHo3OK8+HGgndhNFZHiQ=
                        directPath: /o1/v/t62.7118-24/f1/m238/up-oil-image-4c847830-2a69-4ebd-ac45-f62c9a771a44?ccb=9-4&oh=01_Q5AaICe6iWwOjPuliG4zVq6gNXeUnijoMR_91jKzhLqNUlIB&oe=66B351C8&_nc_sid=000000
                        mediaKeyTimestamp: '1720448410'
                examples:
                  Example 1:
                    value:
                      key:
                          remoteJid: 1111111111@s.whatsapp.net
                          fromMe: true
                          id: 3EB089F063C03E43EECE9D
                      message:
                          imageMessage:
                              url: https://mmg.whatsapp.net/v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0&mms3=true
                              mimetype: image/jpeg
                              fileSha256: ubfaNZ4rY7T7/ghhWnBh1cVf1d00JSHENKunZuHs+yc=
                              fileLength: 7200
                              height: 200
                              width: 200
                              mediaKey: ARUCxn91XDCjmCvFecREY4Fpg9RSOYa8O5D7TxGWGkE=
                              fileName: hypersender.jpeg
                              fileEncSha256: ER9FB+GEzrKmooWDbNpqenokG1mAtvbIU+Ceo7JeNwQ=
                              directPath: /v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0
                              mediaKeyTimestamp: 1741390160
                              caption: dolore nulla nisi Duis
                              jpegThumbnail: /9j/2wBDABALDA4MChAODQ4SERATGCgaGBYWGDEjJR0oOjM9PDkzODdASFxOQERXRTc4UG1RV19iZ2hnPk1xeXBkeFxlZ2P/2wBDARESEhgVGC8aGi9jQjhCY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2P/wAARCAAgACADASIAAhEBAxEB/8QAGAABAQADAAAAAAAAAAAAAAAABQIDBAb/xAAqEAACAQQBAgUDBQAAAAAAAAABAgMABAURIRMxEiJRYXEUkbEVMkGhwf/EABcBAQEBAQAAAAAAAAAAAAAAAAACAQT/xAAdEQACAQUBAQAAAAAAAAAAAAAAAQIREiEiMwNB/9oADAMBAAIRAxEAPwDrctlBZDpRaaYjfPZRRSWGSyA6srEKeR1G19hVY2MZDMSTS+ZVJfR+dCmbm++nvoIG8AjkBLMx1rVDi67TePgHJZZHGjqox8I7mNtgfIpbE5QXo6UoCzKN8dmHrWW2vfqb6eBfA0caghlO97oS9T9NzAaLhQQ4Hse4/NDOVJQeDZw0b2+YuISvAUgn23xSF7Ym6yFvI6K8KKwcN/VXfWsrhpbNxFORonX7h6e1DrkslY+S4jLa/mRf9FCnb5KySwK2dibXIXEiIqQuoCBT96Gv3GRzKpF5l2EBHoO5/NVJf5HIjpRRkK3BEYPPyaUxOLFkOrKQ0zDXHZR6UJ60hBan/9k=
                      messageTimestamp: 1741390160
                      status: PENDING
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
        security:
          - Authorization: []

  '/{instance}/send-voice':
    post:
      tags:
        - Send Messages
      summary: Send Voice
      description: |-
        ## Send Voice Message

        This specialized endpoint will allow you to send voice as if you were recording directly in the WhatsApp application.

        ## You can send voice messages in two ways:

        ## Provide a URL for the voice audio.

        # START_RAW
        <img src="/img/send-voice-url.jpeg" alt="Hypersender Logo" />
        # END_RAW

        :::warning
          Please note that the URL must be publicly accessible and not require any authentication or special headers to access the file.
        :::

        ---

        ## Send the voice audio it self as a file upload.

        # START_RAW
        <img src="/img/send-voice-file.jpeg" alt="Hypersender Logo" />
        # END_RAW


        # START_RAW
        <img src="/img/send-voice-preview.jpeg" alt="Hypersender Logo" />
        # END_RAW
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: "**Require to use `multipart/form-data`**"
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: object
                  properties:
                    url:
                      type: string
                      description: "url to send | required without `file`"
                    file:
                      type: string
                      description: "file to send required without `url`"
                    caption:
                      type: string
                      description: "caption for the file\r\n"
                    reply_to:
                      type: string
                      description: "reply to message id\r\n"
                  required:
                    - url
                    - file
              x-examples:
                Example 1:
                  recipient: '201065684630'
                  audioMessage:
                    url: 'http://commondatastorage.googleapis.com/codeskulptor-assets/week7-brrring.m4a'
            examples:
              Example 1:
                value:
                  chatId: 1111111111111@c.us
                  url: 'http://commondatastorage.googleapis.com/codeskulptor-assets/week7-brrring.m4a'
                  caption: hypersender
                  reply_to: string
              Example 2:
                value:
                  chatId: 1111111111111@c.us
                  file: 'audio.opus'
                  caption: hypersender
                  reply_to: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          audioMessage:
                            type: object
                            properties:
                              url:
                                type: string
                              mimetype:
                                type: string
                              fileSha256:
                                type: string
                              fileLength:
                                type: string
                              seconds:
                                type: number
                              ptt:
                                type: boolean
                              mediaKey:
                                type: string
                              fileEncSha256:
                                type: string
                              directPath:
                                type: string
                              mediaKeyTimestamp:
                                type: string
                              waveform:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      url: 'https://mmg.whatsapp.net/v/t62.7114-24/40934750_1123141612096506_5059779010427990564_n.enc?ccb=11-4&oh=01_Q5AaINJ58zcO7DTlO7DrMAaXKZ3pCWbLWSaQVUM0L3P8JGPa&oe=66B366E1&_nc_sid=5e03e0&mms3=true'
                      mimetype: audio/ogg; codecs=opus
                      fileSha256: Y28LhNra+eEfRNKwIefqY+UU2Uf0ia4l8PrdScvlXcA=
                      fileLength: '139027'
                      seconds: 5
                      ptt: true
                      mediaKey: Chqmzo6fWYc++4A2SgwlzgNZ/3KNKjm3ceaVPSZyNVY=
                      fileEncSha256: DCsffr+JWSnJz+F1cf+uGxY/N0eXmqZxVwKvc2otd40=
                      directPath: /v/t62.7114-24/40934750_1123141612096506_5059779010427990564_n.enc?ccb=11-4&oh=01_Q5AaINJ58zcO7DTlO7DrMAaXKZ3pCWbLWSaQVUM0L3P8JGPa&oe=66B366E1&_nc_sid=5e03e0
                      mediaKeyTimestamp: '1720449163'
              examples:
                Example 1:
                  value:
                    key:
                        remoteJid: 1111111111@s.whatsapp.net
                        fromMe: true
                        id: 3EB089F063C03E43EECE9D
                    message:
                        audioMessage:
                          url: https://mmg.whatsapp.net/v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0&mms3=true
                          mimetype: audio/ogg
                          fileSha256: ubfaNZ4rY7T7/ghhWnBh1cVf1d00JSHENKunZuHs+yc=
                          fileLength: 18886
                          seconds: 10
                          ptt: true
                          mediaKey: ARUCxn91XDCjmCvFecREY4Fpg9RSOYa8O5D7TxGWGkE=
                          fileEncSha256: ER9FB+GEzrKmooWDbNpqenokG1mAtvbIU+Ceo7JeNwQ=
                          directPath: /v/t62.7119-24/31809967_2958746007616712_3774955636954933761_n.enc?ccb=11-4&oh=01_Q5AaIPHnpFjuJwCULeqyHMcDO55BAj3YxolxEVLGXVvVkaKM&oe=67F2DD3D&_nc_sid=5e03e0
                          mediaKeyTimestamp: 1741390160
                          waveform: AAIIAQ0nKCcdX2NTSkUqHQ4KAgICBAUGAwEAAAAAAAAAAAQFARAmMlFQVT4PHkggAgEHGVldZFpGMBYKAwQEBg==
                    messageTimestamp: 1741390160
                    status: PENDING
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

      operationId: send-link-audio

  '/{instance}/forward-message':
      post:
        tags:
          - Send Messages
        summary: forward message
        description: |-
          ## Forward a Message

          You can forward a message to another chat (that you chatted before, otherwise it may fail):

          - Chat

          - Group

          - Recipient

          # START_RAW
          <img src="/img/forward-message.png" alt="Hypersender Logo" />
          # END_RAW


        operationId: wa-forward-message
        parameters:
          - name: Accept
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            description: Instance UUID copied from hypersender dashboard
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                  - type: string
                    properties:
                      messageId:
                        type: string
                    required:
                      - messageId
                x-examples:
                  Example 1:
                    chatId: 111111111111@c.us
                    messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
              examples:
                Example 1:
                  value:
                    chatId: 111111111111@c.us
                    messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                        timestamp:
                          type: number
                        from:
                          type: string
                        fromMe:
                          type: boolean
                        body:
                          type: string
                        hasMedia:
                          type: boolean
                        media:
                          type: object
                        ack:
                          type: number
                        ackName:
                          type: string
                        replyTo:
                          type: string
                        _data:
                          type: object
                          properties:
                            key:
                              type: object
                              properties:
                                remoteJid:
                                  type: string
                                fromMe:
                                  type: boolean
                                id:
                                  type: string
                            message:
                              type: object
                              properties:
                                extendedTextMessage:
                                  type: object
                                  properties:
                                    text:
                                      type: string
                                    contextInfo:
                                      type: object
                                      properties:
                                        forwardingScore:
                                          type: number
                                        isForwarded:
                                          type: boolean
                            messageTimestamp:
                                type: string
                            status:
                                type: string
                  x-examples:
                    Example 1:
                      content:
                        text: Hi
                        contextInfo: []
                examples:
                  Example 1:
                    value:
                      id: true_111111111111@c.us_3EB0579E140521570D238F,
                      timestamp: 1741395597,
                      from: 111111111111@c.us,
                      fromMe: true,
                      body: Hi there!,
                      hasMedia: false,
                      media: null,
                      ack: 0,
                      ackName: PENDING,
                      replyTo: null,
                      _data:
                        key:
                            remoteJid: 111111111111@s.whatsapp.net,
                            fromMe: true,
                            id: 3EB0579E140521570D238F
                        message:
                            extendedTextMessage:
                                text: Hi there!,
                                contextInfo:
                                    forwardingScore: 1,
                                    isForwarded: true
                        messageTimestamp: 1741395597,
                        status: PENDING
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundError'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
                examples:
                  Multiple fields Error:
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - The number you want to send the message to is not on whatsapp.
                        jid: 20121323124131@s.whatsapp.net
                        exists: false
                      statusCode: 422
                  'Single Field error ':
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - textMessage.text should not be empty
                      statusCode: 422
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
                examples:
                  default:
                    value:
                      message: Server Error
                  Example 1:
                    value:
                      message: Server Error
        security:
          - Authorization: []

  '/{instance}/send-seen':
      post:
        tags:
          - Send Messages
        summary: send seen
        description: |-
          ## Send Seen Webhook

          If you get a new message via 🔄 Webhooks and want to reply to that message, you need to first send that you’ve seen the message (double green tick).
        operationId: wa-send-seen
        parameters:
          - name: Accept
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            description: Instance UUID copied from hypersender dashboard
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                  - type: string
                    properties:
                      messageId:
                        type: string
                      participant:
                        type: string
                        description: Send seen for Group Message you need to provide participant field
                    required:
                      - messageId
                x-examples:
                  Example 1:
                    chatId: 111111111111@c.us
                    messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
                    participant: 111111111111@c.us
              examples:
                Example 1:
                  value:
                    chatId: 111111111111@c.us
                    messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
                    participant: 111111111111@c.us
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  allOf:
                    - type: object
                  x-examples:
                    Example 1:
                      content:
                        text: Hi
                        contextInfo: []
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundError'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
                examples:
                  Multiple fields Error:
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - The number you want to send the message to is not on whatsapp.
                        jid: 20121323124131@s.whatsapp.net
                        exists: false
                      statusCode: 422
                  'Single Field error ':
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - textMessage.text should not be empty
                      statusCode: 422
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
                examples:
                  default:
                    value:
                      message: Server Error
                  Example 1:
                    value:
                      message: Server Error
        security:
          - Authorization: []

  '/{instance}/read-chat':
      post:
        tags:
          - Send Messages
        summary: read chat
        description: |-
          ## Read messages

          You can mark all unread messages in the chat as read (double blue checkmark) using one query:

          It’ll find all unread messages in the chat and mark them as read.
        operationId: wa-read-chat
        parameters:
          - name: Accept
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            description: Instance UUID copied from hypersender dashboard
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
          - name: messages
            in: query
            description: How much messages to read (latest first)
            required: false
            schema:
              type: string
              example: '30'
            examples:
              default:
                value: '30'
          - name: days
            in: query
            description: How much days to read (latest first)
            required: false
            schema:
              type: string
              example: '7'
            examples:
              default:
                value: '7'
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                x-examples:
                  Example 1:
                    chatId: 111111111111@c.us
              examples:
                Example 1:
                  value:
                    chatId: 111111111111@c.us
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ids:
                      type: array
                      items:
                        type: string
                examples:
                  Example 1:
                    value:
                      ids:
                        - "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA"
                        - "true_99999999999@c.us_AAAAAAAAAAAAAAAAAAAA"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundError'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
                examples:
                  Multiple fields Error:
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - The number you want to send the message to is not on whatsapp.
                        jid: 20121323124131@s.whatsapp.net
                        exists: false
                      statusCode: 422
                  'Single Field error ':
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - textMessage.text should not be empty
                      statusCode: 422
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
                examples:
                  default:
                    value:
                      message: Server Error
                  Example 1:
                    value:
                      message: Server Error
        security:
          - Authorization: []

  '/{instance}/start-typing':
        post:
          tags:
            - Send Messages
          summary: start typing
          description: |-
            ## Start Typing

            Start typing in the chat.
          operationId: wa-start-typing
          parameters:
            - name: Accept
              in: header
              description: application/json
              schema:
                type: string
                example: application/json
              examples:
                default:
                  value: application/json
            - name: Content-Type
              in: header
              description: application/json
              schema:
                type: string
                example: application/json
              examples:
                default:
                  value: application/json
            - name: instance
              in: path
              description: Instance UUID copied from hypersender dashboard
              required: true
              schema:
                type: string
                example: '{{instance_id}}'
              examples:
                default:
                  value: '{{instance_id}}'
          requestBody:
            description: ''
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SendMessageRequest'
                  x-examples:
                    Example 1:
                      chatId: 111111111111@c.us
                examples:
                  Example 1:
                    value:
                      chatId: 111111111111@c.us
          responses:
            '201':
              description: Successful response
              content:
                application/json:
                  schema:
                    allOf:
                      - type: object
                        properties:
                          result:
                            type: boolean
                    x-examples:
                      Example 1:
                        content:
                          text: Hi
                          contextInfo: []
            '404':
              description: Not Found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/NotFoundError'
            '422':
              description: Validation Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ValidationError'
                  examples:
                    Multiple fields Error:
                      value:
                        message: The given data was invalid.
                        errors:
                          messages:
                            - The number you want to send the message to is not on whatsapp.
                          jid: 20121323124131@s.whatsapp.net
                          exists: false
                        statusCode: 422
                    'Single Field error ':
                      value:
                        message: The given data was invalid.
                        errors:
                          messages:
                            - textMessage.text should not be empty
                        statusCode: 422
            '500':
              description: Internal Server Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ServerError'
                  examples:
                    default:
                      value:
                        message: Server Error
                    Example 1:
                      value:
                        message: Server Error
          security:
            - Authorization: []

  '/{instance}/stop-typing':
        post:
          tags:
            - Send Messages
          summary: stop typing
          description: |-
            ## Stop Typing

            stop typing in the chat.
          operationId: wa-stop-typing
          parameters:
            - name: Accept
              in: header
              description: application/json
              schema:
                type: string
                example: application/json
              examples:
                default:
                  value: application/json
            - name: Content-Type
              in: header
              description: application/json
              schema:
                type: string
                example: application/json
              examples:
                default:
                  value: application/json
            - name: instance
              in: path
              description: Instance UUID copied from hypersender dashboard
              required: true
              schema:
                type: string
                example: '{{instance_id}}'
              examples:
                default:
                  value: '{{instance_id}}'
          requestBody:
            description: ''
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SendMessageRequest'
                  x-examples:
                    Example 1:
                      chatId: 111111111111@c.us
                examples:
                  Example 1:
                    value:
                      chatId: 111111111111@c.us
          responses:
            '201':
              description: Successful response
              content:
                application/json:
                  schema:
                    allOf:
                      - type: object
                        properties:
                          result:
                            type: boolean
                    x-examples:
                      Example 1:
                        content:
                          text: Hi
                          contextInfo: []
            '404':
              description: Not Found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/NotFoundError'
            '422':
              description: Validation Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ValidationError'
                  examples:
                    Multiple fields Error:
                      value:
                        message: The given data was invalid.
                        errors:
                          messages:
                            - The number you want to send the message to is not on whatsapp.
                          jid: 20121323124131@s.whatsapp.net
                          exists: false
                        statusCode: 422
                    'Single Field error ':
                      value:
                        message: The given data was invalid.
                        errors:
                          messages:
                            - textMessage.text should not be empty
                        statusCode: 422
            '500':
              description: Internal Server Error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ServerError'
                  examples:
                    default:
                      value:
                        message: Server Error
                    Example 1:
                      value:
                        message: Server Error
          security:
            - Authorization: []

  '/{instance}/send-poll':
    post:
      tags:
        - Send Messages
      summary: send-poll
      description: |-
        ## Send Poll to Chat

        You can create a poll in a chat.


        # START_RAW
        <img src="/img/send-poll.png" alt="Hypersender Logo" />
        # END_RAW


      operationId: wa-send-poll
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          deprecated: false
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    reply_to:
                      type: string
                      description: Reply to chat ID
                    poll:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Poll question
                        options:
                          type: array
                          items:
                            type: string
                          description: Poll options
                        multipleAnswers:
                          type: boolean
                          description: Allow multiple answers
                  required:
                    - name
                    - options
              x-examples:
                Example 1:
                  chatId: 1111111111111@c.us
                  reply_to: string
                  poll:
                    name: How are you?
                    options:
                        Awesome!
                        Good!
                        Not bad!
                    multipleAnswers: false

            examples:
              Example 1:
                value:
                  chatId: 1111111111111@c.us
                  reply_to: string
                  poll:
                    name: How are you?
                    options: [
                        Awesome!,
                        Good!,
                        Not bad!
                    ]
                    multipleAnswers: true
              Example 2:
                value:
                  chatId: 1111111111111@c.us
                  reply_to: string
                  poll:
                    name: How are you?
                    options: [
                        Awesome!,
                        Good!,
                        Not bad!
                    ]
                    multipleAnswers: false
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                      timestamp:
                        type: number
                      from:
                        type: string
                      fromMe:
                        type: boolean
                      body:
                        type: string
                      hasMedia:
                        type: boolean
                      media:
                        type: object
                      ack:
                        type: number
                      ackName:
                        type: string
                      replyTo:
                        type: string
                      _data:
                        type: object
                        properties:
                          key:
                            type: object
                            properties:
                              remoteJid:
                                type: string
                              fromMe:
                                type: boolean
                              id:
                                type: string
                          message:
                            type: object
                            properties:
                              messageContextInfo:
                                type: object
                                properties:
                                  messageSecret:
                                    type: string
                              pollCreationMessageV3:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        optionName:
                                          type: string
                                  selectableOptionsCount:
                                    type: number
                          messageTimestamp:
                              type: string
                          status:
                              type: string
              examples:
                Example 1:
                  value:
                    id: true_11111111111@c.us_3EB0A4F993D38D3BBD04F3
                    timestamp: 1741448369
                    from: 11111111111@c.us
                    fromMe: true
                    body: null
                    hasMedia: false
                    media: null
                    ack: 0
                    ackName: PENDING
                    replyTo: null
                    _data:
                        key:
                            remoteJid: 11111111111@s.whatsapp.net
                            fromMe: true
                            id: 3EB0A4F993D38D3BBD04F3
                        message:
                            messageContextInfo:
                                messageSecret: VrTaj/wh+/lyIUdBi8TV4JCpbNK1Dd54SNZHH8vR2x0=
                            pollCreationMessageV3:
                                name: Sample Poll
                                options: [
                                    {
                                        optionName: Option 1
                                    },
                                    {
                                        optionName: Option 2
                                    },
                                    {
                                        optionName: Option 3
                                    }
                                ]
                                selectableOptionsCount: 1
                        messageTimestamp: 1741448369
                        status: PENDING
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

  '/{instance}/send-contact-card':
    post:
      tags:
        - Send Messages
      summary: send-contact-card
      description: |-
        ## Send Contact Card in Chat

        You can send a contact card in a chat in two ways:

        - By providing the vcard:

        example:
        ```json
          {
            "vcard": "BEGIN:VCARD\nVERSION:3.0\nFN:Jane Doe\nORG:Company Name;\nTEL;type=CELL;type=VOICE;waid=911111111111:+111111111111\nEND:VCARD"
          }
        ```
        - By providing the contact info:

        example:
        ```json
            {
              "vcard": null,
              "fullName": "john doe",
              "organization": "hypersender",
              "phoneNumber": "+1111111111111",
              "whatsappId": "911111111111"
            }
        ```

          # START_RAW
          <img src="/img/send-contact-card.png" alt="Hypersender Logo" />
          # END_RAW


      operationId: wa-send-contact-card
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          deprecated: false
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    contacts:
                      type: array
                      items:
                        type: object
                        properties:
                          vcard:
                            type: string
                            description: vcard string | required without `fullName`, `phoneNumber`
                          fullName:
                            type: string
                            description: Full name of the contact | required without `vcard`
                          organization:
                            type: string
                            description: Organization of the contact
                          phoneNumber:
                            type: string
                            description: Phone number of the contact | required without `vcard`
                          whatsappId:
                            type: string
                            description: Whatsapp ID of the contact
                  required:
                    - contacts
                    - vcard
                    - phoneNumber
              x-examples:
                Example 1:
                  chatId: 1111111111111@c.us
                  contacts: [
                      {
                          vcard: BEGIN:VCARD\nVERSION:3.0\nFN:Jane Doe\nORG:Company Name;\nTEL;type=CELL;type=VOICE;waid=911111111111:+11111111111111\nEND:VCARD,
                          # vcard: null,
                          fullName: nagi,
                          organization: ,
                          phoneNumber: +1111111111111,
                          whatsappId: 911111111111
                      }
                  ]
            examples:
              Example 1:
                value:
                  chatId: 1111111111111@c.us
                  contacts: [
                      {
                          vcard: BEGIN:VCARD\nVERSION:3.0\nFN:Jane Doe\nORG:Company Name;\nTEL;type=CELL;type=VOICE;waid=911111111111:+11111111111111\nEND:VCARD,
                          organization: Hypersender,
                          whatsappId: 911111111111
                      }
                  ]
              Example 2:
                value:
                  chatId: 1111111111111@c.us
                  contacts: [
                      {
                          vcard: null,
                          fullName: John Doe,
                          organization: Hypersender,
                          phoneNumber: +111111111111,
                          whatsappId: 911111111111
                      }
                  ]
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

  '/{instance}/send-location':
    post:
      tags:
        - Send Messages
      summary: Send Location
      description: |-
        ## Send Location

        Send location to a chat

          # START_RAW
          <img src="/img/send-location.png" alt="Hypersender Logo" />
          # END_RAW

      operationId: wa-send-location
      parameters:
        - name: Accept
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          description: application/json
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          description: Instance UUID copied from hypersender dashboard
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SendMessageRequest'
                - type: string
                  properties:
                    latitude:
                      type: number
                      description: Latitude of the location
                    longitude:
                      type: number
                      description: Longitude of the location
                    title:
                      type: string
                      description: Title of the location
                    reply_to:
                      type: string
                      description: "Reply to message id\r\n"
                  required:
                    - latitude
                    - longitude
              x-examples:
                Example 1:
                  chatId: 111111111111@c.us
                  latitude: 38.8937255
                  longitude: -77.0969763
                  title: Our office
                  reply_to: string
            examples:
              Example 1:
                value:
                  chatId: 111111111111@c.us
                  latitude: 38.8937255
                  longitude: -77.0969763
                  title: Our office
                  reply_to: string
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          locationMessage:
                            type: object
                            properties:
                              degreesLatitude:
                                type: number
                              degreesLongitude:
                                type: number
                      messageTimestamp:
                        type: string
                      status:
                        type: string
                x-examples:
                  Example 1:
                    content:
                      text: Hi
                      contextInfo: []
              examples:
                Example 1:
                  value:
                    key:
                      remoteJid: 111111111@s.whatsapp.net,
                      fromMe: true,
                      id: 3EB0CD3810439716606547
                    message:
                      locationMessage:
                        degreesLatitude: 38.8937255
                        degreesLongitude: -77.0969763
                    messageTimestamp: 1741359489
                    status: PENDING
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Multiple fields Error:
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - The number you want to send the message to is not on whatsapp.
                      jid: 20121323124131@s.whatsapp.net
                      exists: false
                    statusCode: 422
                'Single Field error ':
                  value:
                    message: The given data was invalid.
                    errors:
                      messages:
                        - textMessage.text should not be empty
                    statusCode: 422
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              examples:
                default:
                  value:
                    message: Server Error
                Example 1:
                  value:
                    message: Server Error
      security:
        - Authorization: []

  '/{instance}/react-to-message':
    put:
      tags:
        - Send Messages
      summary: react-to-message
      description: |-
        ## React to Message

        Add a reaction to a message.

        # START_RAW
        <img src="/img/react-to-message.png" alt="Hypersender Logo" />
        # END_RAW


      operationId: wa-react-to-message
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: Content-Type
          in: header
          deprecated: false
          schema:
            type: string
            example: application/json
          examples:
            default:
              value: application/json
        - name: instance
          in: path
          required: true
          schema:
            type: string
            example: '{{instance_id}}'
          examples:
            default:
              value: '{{instance_id}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - type: string
                  properties:
                    messageId:
                      type: string
                      description: Message ID
                    reaction:
                      type: string
                      description: Reaction to add
                  required:
                    - messageId
                    - reaction
              x-examples:
                Example 1:
                  messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
                  reaction: 👍
            examples:
              Example 1:
                value:
                  messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
                  reaction: 👍
              Example 2:
                value:
                  messageId: false_111111111111@c.us_3EB08F6AD2A432386EFA0E
                  reaction: ""
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      key:
                        type: object
                        properties:
                          remoteJid:
                            type: string
                          fromMe:
                            type: boolean
                          id:
                            type: string
                      message:
                        type: object
                        properties:
                          reactionMessage:
                            type: object
                            properties:
                              key:
                                type: object
                                properties:
                                  remoteJid:
                                    type: string
                                  fromMe:
                                    type: boolean
                                  id:
                                    type: string
                              text:
                                type: string
                              senderTimestampMs:
                                type: string
                      messageTimestamp:
                        type: string
                      status:
                        type: string
              examples:
                Example 1:
                  value:
                    key:
                        remoteJid: 1111111111@s.whatsapp.net
                        fromMe: true
                        id: 3EB089F063C03E43EECE9D
                    message:
                        reactionMessage:
                          key:
                              remoteJid: 1111111111@s.whatsapp.net
                              fromMe: false
                              id: 3EB08F6AD2A432386EFA0E
                          text: 👍
                          senderTimestampMs: 1741410470848
                    messageTimestamp: 1741390160
                    status: PENDING
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
        - Authorization: []

  '/{instance}/star-message':
      put:
        tags:
          - Send Messages
        summary: star message
        description: |-
          ## Star a Message

          star or unstar a message.


          # START_RAW
          <img src="/img/star-message.png" alt="Hypersender Logo" />
          # END_RAW

        operationId: wa-star-message
        parameters:
          - name: Accept
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            description: Instance UUID copied from hypersender dashboard
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SendMessageRequest'
                  - type: string
                    properties:
                      messageId:
                        type: string
                      star:
                        type: boolean
                        description: star or unstar a message
                    required:
                      - messageId
                      - star
                x-examples:
                  Example 1:
                    chatId: 111111111111@c.us
                    messageId: true_111111111111@c.us_3EB08F6AD2A432386EFA0E
                    star: true
              examples:
                Example 1:
                  value:
                    chatId: 111111111111@c.us
                    messageId: true_111111111111@c.us_3EB08F6AD2A432386EFA0E
                    star: true
                Example 2:
                  value:
                    chatId: 111111111111@c.us
                    messageId: true_111111111111@c.us_3EB08F6AD2A432386EFA0E
                    star: false
        responses:
          '200':
            description: Successful response
            content:
              application/json:
                schema:
                  allOf:
                    - type: object
                  x-examples:
                    Example 1:
                      content:
                        text: Hi
                        contextInfo: []
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundError'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
                examples:
                  Multiple fields Error:
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - The number you want to send the message to is not on whatsapp.
                        jid: 20121323124131@s.whatsapp.net
                        exists: false
                      statusCode: 422
                  'Single Field error ':
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - textMessage.text should not be empty
                      statusCode: 422
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
                examples:
                  default:
                    value:
                      message: Server Error
                  Example 1:
                    value:
                      message: Server Error
        security:
          - Authorization: []

  '/{instance}/delete-message':
      delete:
        tags:
          - Send Messages
        summary: delete message
        description: |-
          ## Delete message

          You can delete messages from the chat.

          so if you want to delete a message from a specific chat pass the `chatId` and `messageId` in the query parameters.
        operationId: wa-delete-message
        parameters:
          - name: Accept
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: Content-Type
            in: header
            description: application/json
            schema:
              type: string
              example: application/json
            examples:
              default:
                value: application/json
          - name: instance
            in: path
            description: Instance UUID copied from hypersender dashboard
            required: true
            schema:
              type: string
              example: '{{instance_id}}'
            examples:
              default:
                value: '{{instance_id}}'
          - name: chatId
            in: query
            description: Contact number - **learn what is [`chatId`](https://docs.hypersender.com/docs/whatsapp/what-is-chatid)**
            required: true
            schema:
              type: string
              example: '111111111111@c.us'
            examples:
              default:
                value: '111111111111@c.us'
          - name: messageId
            in: query
            description: ID of the message to delete
            required: true
            schema:
              type: string
            examples:
              default:
                value: 'true_111111111111@c.us_3EB05B8C1E4'
        responses:
          '201':
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    key:
                      type: object
                      properties:
                        remoteJid:
                          type: string
                        fromMe:
                          type: boolean
                        id:
                          type: string
                    message:
                      type: object
                      properties:
                        protocolMessage:
                          type: object
                          properties:
                            key:
                              type: object
                              properties:
                                remoteJid:
                                  type: string
                                fromMe:
                                  type: boolean
                                id:
                                  type: string
                            type:
                              type: string
                    messageTimestamp:
                      type: string
                    status:
                      type: string
                examples:
                  Example 1:
                    value:
                      key:
                        remoteJid: "111111111111@s.whatsapp.net"
                        fromMe: true
                        id: "3EB0E474C76F33528463B1"
                      message:
                        protocolMessage:
                          key:
                            remoteJid: "111111111111@s.whatsapp.net"
                            fromMe: true
                            id: "3EB05B8C1E491431AEAA9A"
                          type: "REVOKE"
                      messageTimestamp: "1749413855"
                      status: "PENDING"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundError'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationError'
                examples:
                  Multiple fields Error:
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - The number you want to send the message to is not on whatsapp.
                        jid: 20121323124131@s.whatsapp.net
                        exists: false
                      statusCode: 422
                  'Single Field error ':
                    value:
                      message: The given data was invalid.
                      errors:
                        messages:
                          - textMessage.text should not be empty
                      statusCode: 422
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServerError'
                examples:
                  default:
                    value:
                      message: Server Error
                  Example 1:
                    value:
                      message: Server Error
        security:
          - Authorization: []
components:
  parameters:
    instance:
      name: instance
      in: path
      description: Hypersender instance UUID
      required: true
      schema:
        type: string
      example: '{{instance_id}}'
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  examples:
    default:
      value:
        messageId: 1442903f-78fc-4433-a587-f4db1e781fe3
  schemas:
    SendMessageRequest:
      type: object
      properties:
        chatId:
          type: string
          description: Contact number - **learn what is [`chatId`](https://docs.hypersender.com/docs/whatsapp/what-is-chatid)**
          example: 111111111111@c.us
      required:
        - chatId
      x-examples:
        Example 1:
          recipient: '11111111111@c.us'
          options:
            delay: 0
            presence: recording
            quoteMessageById: string
            groupMention:
              hidden: true
              everyone: true
            externalAttributes: string
          linkPreview:
            link: 'https://hypersender.com'
            title: Hypersender
            description: 'Hypersender is a powerful API for sending Whatsapp and SMS messages. It is designed to be simple and easy to use, with a focus on security and reliability.'
            text: Hypersender is Amazing!
      x-stoplight:
        id: ccq4omalkpe3k
    NotFoundError:
      type: object
      title: NotFoundError
      example:
        message: Resource not found.
      properties:
        message:
          type: string
      x-examples:
        Example 1:
          message: Resource not found.
      x-stoplight:
        id: ar3vz55asbxme
    ValidationError:
      type: object
      title: ValidationError
      properties:
        message:
          type: string
        errors:
          type: object
          description: Invalid or missing feilds will be shown here
        statusCode:
          type: number
      example:
        message: The given data was invalid.
        errors: {}
        statusCode: 422
      required:
        - errors
        - statusCode
      x-examples:
        Multiple fields Error:
          message: The given data was invalid.
          errors:
            messages:
              - The number you want to send the message to is not on whatsapp.
            jid: 20121323124131@s.whatsapp.net
            exists: false
          statusCode: 422
        'Single Field error ':
          message: The given data was invalid.
          errors:
            messages:
              - textMessage.text should not be empty
          statusCode: 422
      x-stoplight:
        id: 90x3wfxw7gqcb
    ServerError:
      type: object
      title: ServerError
      properties:
        message:
          type: string
      example:
        message: Internal Server Error
      x-stoplight:
        id: 2fhq2gihsfreh
security:
  - Authorization: []
x-internal: false
